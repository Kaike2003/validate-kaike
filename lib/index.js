var g=async e=>{let s=await Promise.allSettled(e.map(({fn:t,input:a})=>new Promise((l,i)=>{try{l(t(a))}catch(n){i(n)}}))),r=s.filter(t=>t.status==="rejected").map(t=>t.reason);return r.length>0?Promise.reject(r):Promise.resolve(s.map(t=>t.value))},o=e=>{if(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(e))return{message:"Valid email",value:e};throw{message:"Invalid email",value:e}},u=e=>{if(/^\d{9}[A-Z]{2}\d{3}$/.test(e))return{message:"Valid identity card",value:e};throw{message:"Invalid identity card",value:e}},d=e=>{if(/^[A-Z]{2}\d{2}[A-Z0-9]{11,30}$/.test(e))return{message:"Valid Iban",value:e};throw{message:"Invalid Iban",value:e}},m=e=>{if(/^[A-Z]{1,2}[0-9]{6,9}$/.test(e))return{message:"Valid passport",value:e};throw{message:"Invalid passport",value:e}};export{u as IsBi,o as IsEmail,d as IsIban,m as IsPassport,g as validate};
//# sourceMappingURL=index.js.map
